# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Vue app

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
    paths:
      - SnapScroll.Frontend/**
      - .github/workflows/node.js.yml
      - kubernetes/web/**
    
  pull_request:
    branches: [ "master" ]
    paths:
      - SnapScroll.Frontend/**
      - .github/workflows/node.js.yml
      - kubernetes/web/**

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-vue

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./SnapScroll.Frontend

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: 'SnapScroll.Frontend/package-lock.json'
    - run: npm ci
    - run: npm run build --if-present
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag
          type=ref,event=branch
          type=sha,format=long
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./SnapScroll.Frontend
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./SnapScroll.Frontend

    steps:
      - uses: actions/checkout@v3
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: ${{ vars.KUBERNETES_ADDRESS }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - name: Set Image Identifier
        run: |
          echo "IMAGE=${{ env.REGISTRY }}/${IMG_NAME@L}:sha-${{ github.sha }}" >> ${GITHUB_ENV}
        env:
          IMG_NAME: ${{ env.IMAGE_NAME }}
      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          action: deploy
          namespace: snapscroll
          manifests: |
            kubernetes/web/deployment.yaml
            kubernetes/web/ingress.yaml
            kubernetes/web/service.yaml
          strategy: 'basic'
          images: |
            ${{ env.IMAGE }}